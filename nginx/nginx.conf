# Copyright (C) 2025 David Botton <david.botton@ulb.be>
# This file is part of PKI Seccam <https://github.com/nottoBD/pki-seccam>.
# Licensed under the WTFPL Version 2. See LICENSE file for details.

# nginx acts as a hardened reverse proxy in front of everything
# forces TLS 1.3 only and sets strict security headers (HSTS, CSP, X-Frame-Options, etc)
# it presents a client cert to upstream services and verifies backend certs with pinned server names (to thwart any MitM)
# also has request rate limiting on various endpoints (video upload, API calls, etc) to mitigate DoS attacks
# note: optional client-auth (mTLS) is configured but currently off (ssl_verify_client off); flip that on and require the .p12 client cert to enforce mutual TLS

user  nginx;
worker_processes  auto;

events {
    worker_connections  1024;
    use epoll;
    multi_accept on;
}

http {
# Global
    include       mime.types;
    default_type  application/octet-stream;

    server_tokens off;                 # hide version
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;

    proxy_headers_hash_max_size 1024;
    proxy_headers_hash_bucket_size 128;
    proxy_buffer_size            16k;
    proxy_buffers                8 32k;
    proxy_busy_buffers_size      64k;
    large_client_header_buffers  8 32k;

# TLS
    ssl_protocols               TLSv1.3;
    # ≤ TLS1.2 disabled
    ssl_session_cache           shared:SSL:10m;
    ssl_session_timeout         1h;
    ssl_session_tickets         off; # ><ticket resumption fingerprinting
    ssl_ecdh_curve              X25519:P-256;

    ssl_certificate             /etc/ssl/certs/ssl-chain.pem;
    ssl_certificate_key         /etc/ssl/private/ssl-privatekey.pem;

# HSTS
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

# Proxy to Upstream TLS verif
    # nginx shows client‑auth cert to every upstream
    proxy_ssl_certificate       /etc/ssl/certs/client.fullchain.crt;
    proxy_ssl_certificate_key   /etc/ssl/private/client.key;
    proxy_ssl_trusted_certificate /etc/ssl/certs/step-root.pem;

    proxy_ssl_server_name       on;
    proxy_ssl_verify            on;
    proxy_ssl_verify_depth      2;
    proxy_ssl_name             "server.seccam.internal";# ><MITM w/ alt‑leaf from same CA

    # Sec Headers
    add_header X-Frame-Options            DENY            always;
    add_header X-Content-Type-Options     nosniff         always;
    add_header X-XSS-Protection           "1; mode=block" always;
    add_header Referrer-Policy            no-referrer-when-downgrade always;
    add_header Permissions-Policy         "accelerometer=(), camera=(), microphone=(), geolocation=()" always;
    add_header Cross-Origin-Embedder-Policy require-corp  always;
    add_header Cross-Origin-Resource-Policy same-origin   always;

    # CSP
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' blob: 'wasm-unsafe-eval' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; font-src 'self'; img-src 'self' data: blob:; connect-src 'self' wss:; media-src 'self' blob:; object-src 'none'; frame-ancestors 'none';" always;

# >< DoS/flooding Denial of service
    limit_req_zone   $binary_remote_addr  zone=req_limit:10m   rate=1r/s;
    limit_req_zone   $binary_remote_addr  zone=get_segment:10m rate=20r/s;
    limit_req_zone   $binary_remote_addr  zone=static_fast:10m rate=30r/s;
    limit_req_zone   $binary_remote_addr  zone=api_limit:10m rate=10r/s;
    limit_req_zone   $binary_remote_addr  zone=video_upload:10m rate=5r/s;
    limit_conn_zone  $binary_remote_addr  zone=conn_limit:10m;

    # Upstream blocks
    upstream frontend     { server client:3443; }
    upstream backend      { server server:8888; }
    upstream mailpit_ui   { server mailpit:3025; }


    # HTTP to HTTPS strict enforcement
    server {
        listen 80 default_server;
        server_name _;
        return 301 https://$host$request_uri;
    }

    #Main HTTPS vhost (mapping pub ports)
    server {
        listen 443 ssl reuseport;
        server_name _;
        http2 on;

        # ><Slowloris DoS Attack
        limit_conn            conn_limit 10;
        client_body_timeout    10s;
        client_header_timeout  10s;
        keepalive_timeout      5s 5s;
        send_timeout           10s;

    # ROUTING
        # Nextjs reload socket
        location ^~ /_next/webpack-hmr {
            proxy_pass         https://frontend;
            proxy_http_version 1.1;
            proxy_set_header   Upgrade    $http_upgrade;
            proxy_set_header   Connection "upgrade";
            proxy_ssl_name     client.seccam.internal; #pin
            include            /etc/nginx/snippets/upstream_headers.conf;
        }

        # Nextjs static
        location / {
            proxy_pass  https://frontend;
            proxy_ssl_name  client.seccam.internal; #pin
            include        /etc/nginx/snippets/upstream_headers.conf;

            limit_req  zone=static_fast  burst=40  nodelay;
        }

        # API
        location /api/ {
            proxy_pass   https://backend;
            proxy_ssl_name  server.seccam.internal; #pin
            include        /etc/nginx/snippets/upstream_headers.conf;
            limit_req   zone=api_limit  burst=20  nodelay;
            proxy_set_header X-Forwarded-Host $http_host;
            proxy_ssl_verify off;
            proxy_buffering off;
        }

        # Video stream upload
        location = /api/video/streaming {
            limit_req   zone=video_upload  burst=5  nodelay;
            proxy_pass  https://backend;
            proxy_ssl_verify_depth 2;
            proxy_ssl_name  server.seccam.internal;

            proxy_set_header Host              $host;
            proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            include            /etc/nginx/snippets/upstream_headers.conf;
            proxy_set_header X-Forwarded-Host $http_host;
        }

        # Swagger UI
        location /api-docs {
            proxy_pass https://backend;
            proxy_ssl_name server.seccam.internal; #pin
            include /etc/nginx/snippets/upstream_headers.conf;
            limit_req zone=api_limit burst=20 nodelay;
        }

        # mailpit UI
        location /mailpit {
            proxy_pass      https://mailpit_ui;
            proxy_ssl_name  mailpit.seccam.internal; #pin
            include         /etc/nginx/snippets/upstream_headers.conf;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

    # mutual-TLS: browser to nginx client Auth
#         ssl_client_certificate  /etc/ssl/certs/clients_ca_chain.pem;  # trust anchor
#         ssl_verify_depth        2;
          ssl_verify_client       off; # REJECT browsers without .p12 if 'on'

    }
}
